# xth test script
#
# This file is a test script for xth (xic Test Harness).  It
# conforms to the following grammar:
#
#   ScriptFile      ::= Commands+
#   Command         ::= build
#                     | CompilerTest
#   CompilerTest    ::= TestKind (\(TestName\))? ([TestPath])? ("CmdLineArgs")?
#                           { (FileTest;)* }
#   TestKind        ::= xic
#   TestName        ::= LitString
#   FileTest        ::= Filenames Description? FailureSet?
#   Filenames       ::= Filename+
#   Description     ::= LitString
#   FailureSet      ::= Failure (, Failure)*
#   Failure         ::= \( ErrorKind \)
#                     | \( ErrorKind, LitString \)
#
#   TestPath        :   the path to the test files, enclosed in quotes,
#                       relative to the path given in xth's -testpath flag.
#   CmdLineArgs     :   command-line arguments for xic
#   Filename        :   the name of a file, interpreted from TestPath.
#   LitString       :   a literal string, enclosed in quotes.
#   ErrorKind       :   one of, or a unique prefix of one of the following
#                       strings: "Lexical Error", "Syntax Error", or
#                       "Semantic Error".
#
# xth runs the commands in order of appearance.

xic ("Test --parse") "--parse" {
  array_func_param_with_len_paramdecl01.xi;
  array_func_param_with_len_paramdecl02.xi;
  array_func_param_with_len_paramdecl03.xi;
  array_len_decl_assign_vardecl08.xi;
  full_prog_anon08_03.xi;
  func_arr_return_assign_assign02.xi;
  func_def_return_invalid_type_anon01_17.xi;
  func_in_ixi_x05.ixi;
  func_without_braces_body_codedecl01.xi;
  func_without_braces_body_codedecl02.xi;
  func_without_braces_body_codedecl03.xi;
  if_else_return_anon06_02.xi;
  if_return_if02.xi;
  length_as_stmt_in_function_length03.xi;
  min_int_multi_parse_anon07_01.xi;
  min_int_parse_expr06.xi;
  multi_array_var_decl_with_len_vardecl01.xi;
  multi_array_var_decl_with_len_vardecl02.xi;
  multi_dim_arrays_anon04_01.xi;
  multi_var_decl_no_rhs_vardecl07.xi;
  multi_var_decl_underscore_no_rhs_vardecl06.xi;
  multiple_underscore_assign_vardecl03.xi;
  return_as_funcs_anon01_03.xi;
  return_multiple_blocks_anon01_02.xi;
  return_print_assign01.xi;
  return_print_multi_return_return01.xi;
  return_print_void_return_return02.xi;
  use_in_ixi_x03.ixi;
}
